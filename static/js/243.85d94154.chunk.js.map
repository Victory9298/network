{"version":3,"file":"static/js/243.85d94154.chunk.js","mappings":"gKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCYjN,EATmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCCtC,EANgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAhB,SAA4BJ,EAAMO,W,iDCiCpCC,GAAcC,EAAAA,EAAAA,GAAiB,IAiB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACX,GACpB,OACI,kBAAMa,SAAUb,EAAMc,aAAtB,WACA,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAClBC,SAAU,CAACC,EAAAA,EAAUX,GACrBF,KAAK,iBAAiBc,YAAY,0BAEtC,0BACI,6CAQZ,EA9CgB,SAACpB,GAEb,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBJ,GAAIwB,EAAExB,IAAZwB,EAAExB,OAC1EyB,EAAmBN,EAAMO,aAAaH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAAoBL,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,OAClEmB,EAAMS,eAM3B,OAAK9B,EAAM+B,QAGP,iBAAK5B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKmB,KAEL,gBAAKpB,UAAWC,EAAhB,UACI,+BAAQuB,EAAR,UAEJ,SAACjB,EAAD,CAAqBG,SAdT,SAACmB,GACjBhC,EAAMiC,YAAYD,EAAOF,uBAGH,SAAC,KAAD,CAAUzB,GAAI,Y,oECH5C,GAAe6B,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACc,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,GAASC,EAAAA,EAAAA,GAAmBP,UCVR,SAACQ,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAKxC,MAAM+B,QAET,SAACO,GAAD,UAAeE,KAAKxC,SAFI,SAAC,KAAD,CAAUK,GAAG,eAHT,GACXoC,EAAAA,WAahC,OAFqCN,EAAAA,EAAAA,KAJJ,SAACd,GAAD,MAAY,CACzCU,OAAQV,EAAMqB,KAAKX,UAGcI,CAAoCI,KDG7E,CAGEI","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__5Z7aT\",\"dialogsItems\":\"Dialogs_dialogsItems__RakyF\",\"active\":\"Dialogs_active__Tz7Kh\",\"dialog\":\"Dialogs_dialog__Dnr+c\",\"messages\":\"Dialogs_messages__-1+Tm\",\"message\":\"Dialogs_message__caCIl\"};","import React from \"react\";\r\nimport s from \"../../Dialogs/Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field } from \"redux-form\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { $CombinedState } from \"redux\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messagesData.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div> { messagesElements } </div>      \r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} \r\n            validate={[required, maxLength50]}\r\n            name=\"newMessageBody\" placeholder=\"Enter your message\"/> \r\n          </div>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form> \r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect'\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody)); \r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messagesData","m","newMessageBody","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","auth","Dialogs"],"sourceRoot":""}